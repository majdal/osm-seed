version: '3'
services:
  web:
    image: openseed-osm-website:v1
    build:
      context: ./openstreetmap-website
      dockerfile: Dockerfile
    expose: 
      - "80"
    env_file: 
      - ./.env
    depends_on:
      - db
    networks: 
      - web_network
      - db_network
  db:
    image: openseed-db:v1
    build:
      context: ./db
      dockerfile: Dockerfile
    ports:
      - "5432:5432"
    volumes:
      - dbdata:/var/lib/postgresql/data
    env_file: 
      - ./.env
    networks: 
      - db_network
  osmosis:
    image: openseed-osmosis:v1
    build: 
      context: ./osmosis
      dockerfile: Dockerfile
    depends_on:
      - web
      - db
    command: >
      /bin/bash -c "
      echo Sleep the osmosis for a while!;
      sleep 40;
      echo Creating the osmosis!;
      ./start.sh"
    env_file: 
      - ./.env
  db-backup-restore:
    image: openseed-db-backup-restore:v1
    build: 
      context: ./db-backup-restore
      dockerfile: Dockerfile
    depends_on:
      - web
      - db
    command: >
      /bin/bash -c "
      echo Sleep for a while!;
      sleep 20;
      echo Building backup!;
      ./start.sh"
    env_file: 
      - ./.env
    networks: 
      - db_network
  id-editor:
    image: osmseed-id-editor:v1
    build: 
      context: ./id-editor
      dockerfile: Dockerfile
    expose:
      - "8080"
    depends_on:
      - db
      - web
    env_file: 
      - ./.env
    networks: 
      - web_network
      - db_network
  replication-job:
    image: osmseed-replication-job:v1
    build:
      context: ./replication-job
      dockerfile: Dockerfile
    volumes:
      - ./replication-files:/app/data
    depends_on:
      - web
      - db
    networks: 
      - db_network
      - web_network
    command: >
      /bin/bash -c "
      echo Sleep the replication-job for a while!;
      sleep 40;
      echo Creating the replication-job!;
      ./start.sh"
    env_file:
      - ./.env
  populate-apidb:
    image: osmseed-populate-apidb:v1
    build:
      context: ./populate-apidb
      dockerfile: Dockerfile
    volumes:
      - ./replication-files:/app/data
    depends_on:
      - web
      - db
    command: >
      /bin/bash -c "
      echo Sleep for a while populate-apidb!;
      sleep 20;
      echo Starting populate-apidb!;
      ./start.sh"
    env_file:
      - ./.env
  nginx: 
    build:
      context: ./nginx
      dockerfile: Dockerfile
    volumes:
     - ./nginx/nginx.conf.template:/etc/nginx/conf.d/nginx.conf.template
    command: >
      /bin/bash -c "
      envsubst '$${SERVER_PORT} $${SERVER_URL}' < /etc/nginx/conf.d/nginx.conf.template > /etc/nginx/nginx.conf \
      && nginx -g 'daemon off;'"
    env_file: 
      - ./.env
    environment:
      - SERVER_URL
      - SERVER_PORT
    ports:
      - "80:80"
      - "443:443"
    networks: 
      - web_network
      - db_network
    depends_on: 
      - web
      - db
      - id-editor
networks: 
  web_network: 
    driver: bridge
  db_network: 
    driver: bridge
volumes:
  dbdata:
